`timescale 1ns / 1ps

module APS_DM_tb();

reg   [31:0] adr;                      // создаем регистр дл€ управлени€ входом адреса
wire  [31:0] rd;                       // создаем провод дл€ подключени€ к выходу пам€ти

DM dut (.A(adr), .RD(rd));        // подключаем провер€емый модуль

integer i;                            // переменна€ дл€ цикла for
integer file_mem;                     // дл€ сохранени€ дескриптора файла
reg [31:0] new_data;                         // дл€ сохранени€ очередного значени€ из файла

initial
  file_mem = $fopen("Instructions.txt", "r");  // получение дескриптора файла дл€ последующего чтени€ "r"

initial begin
  for (i = 0; i < 8; i = i + 1) begin // подобно синтаксису C - выполнить цикл 8 раз дл€ i от 0 до 7
    adr = i << 2;                          // подать на вход адреса текущее значение i
    $fscanf(file_mem, "%b", new_data);// считать очередную строку (одно значение) из файла в new_data 
    #10;                              // задержка 10 единиц времени симул€ции
    if (new_data != rd) begin         // если значение выдаваемое блоком пам€ти не равно значению из файла, то
      $display($time, "BAD!  adr = %d, file = %h, memory = %h", adr, new_data, rd);  // сообщить об ошибке
    end                              
  end
  $fclose(file_mem);                  // закрыть файл
  $finish;                            // закончить симул€цию
end

endmodule
